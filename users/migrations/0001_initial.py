# Generated by Django 5.1 on 2024-09-18 13:08

import django.utils.timezone
import users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Электронная почта",
                    ),
                ),
                (
                    "full_name",
                    models.TextField(blank=True, null=True, verbose_name="ФИО"),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True, null=True, upload_to="", verbose_name="Изображение"
                    ),
                ),
                (
                    "vk_link",
                    models.URLField(blank=True, null=True, verbose_name="ВК ссылка"),
                ),
                (
                    "vk_id",
                    models.IntegerField(blank=True, null=True, verbose_name="ВК ID"),
                ),
                (
                    "eco_balance",
                    models.IntegerField(default=0, verbose_name="Эко-баллы"),
                ),
                (
                    "is_department",
                    models.BooleanField(
                        default=False, verbose_name="Сотрудник департамента"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
            managers=[
                ("objects", users.models.CustomUserManager()),
            ],
        ),
    ]
